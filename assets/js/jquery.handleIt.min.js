(function(a){a.fn.handleIt=function(b){var c=a.extend({json:null,name:null,path:"/assets/templates/",container:"body",refresh:null,callback:function(){}},b);var d={getTemplate:function(g,f){var e=a('script[data-template="'+g.name+'"]',g.container);if(e.length){return e.html()}else{var h=g.path+g.name+".handlebars";return a.get(h,function(j){var i=a("<script/>",{type:"text/x-handlebars-template","data-template":g.name}).html(j);i.appendTo(g.container)})}},getData:function(f,e){return(typeof f.json==="object")?f.json:a.getJSON(f.json)},setTemplate:function(g,f,e){a.when(d.getTemplate(f,e),d.getData(f,e)).then(function(j,k){var i=(typeof j==="object")?j[0]:j,h=k[0];if(typeof i!="string"){a.error("Oh no... your template "+f.name+" didn't work!")}else{if(typeof h!="object"&&k[1]!="success"){a.error("Oh no... your data "+f.json+" didn't work!")}else{var j=Handlebars.compile(i);g.html(j(h));typeof f.callback!="function"||f.callback()}}})},errorChecks:function(e){typeof Handlebars!="undefined"||a.error("Handlebars is undefined");!!e.json&&!!e.name||a.error("json and name options are required")}};return this.each(function(f,h){var i=a(this),e=c,g=i.data(),e=a.extend(e,g);i.data(e);d.errorChecks(i.data());d.setTemplate(i,i.data(),f);if(typeof i.data().refresh==="number"&&i.data().refresh>499){setInterval(function(){d.setTemplate(i,i.data(),f)},i.data().refresh)}})}})(jQuery);